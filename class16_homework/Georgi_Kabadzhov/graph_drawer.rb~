require_relative "vertex"
require_relative "drawer"

d = Drawer.new "graph.svg", 300,350
d.start

class GraphDrawer

	attr_accessor :vs
	
	def initialize drawer
		@drawer = drawer
		self.vs = []
	end
	
	def draw
		draw_vertexes
		draw_edges	
	end
	
	private
	def draw_edges
		vs>each_index do |n|
			vs[n].edges.each_index do |k|
				vertex1=vs[n]
				edge - vs[n].edges[k]
				edge
			end
		end	
	end

	def draw_vertexes
		vs.each_index do |n|
			x = 50 +40*n
			y = 50 +40*n
			vs[n].draw @drawer,x, y
		end
	end
end

graph_drawer = GraphDrawer.new d
v1 = Vertex.new("172.16.18.15")
v2 = Vertex.new( "172.16.18.10")
v3 = Vertex.new( "172.16.18.5")

#1 v1.connect(v3) do
# e = Edge.new
# e.source = v1
# e.source = v3
#end

#2 connect(v1, v2)
#3 graph_drawer.connect(v1, v2)
#4 e = Edge.new (v1, v2)
graph_drawer.vs << v1
graph_drawer.vs << v2
graph_drawer.vs << v3 
graph_drawer.draw

d.finish
